# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Wed Apr 10 20:32:28 2024
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))